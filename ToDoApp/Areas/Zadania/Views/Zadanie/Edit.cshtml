@model ToDoApp.Areas.Zadania.Models.ToDoModel



<h2>View</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<!--<div class="form-group">
		@Html.LabelFor(model => model.Identifier, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Identifier, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Identifier, "", new { @class = "text-danger" })
		</div>
	</div>-->

	<div class="form-group">
		@Html.LabelFor(model => model.Temat, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Temat, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Temat, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Czynnosc, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Czynnosc, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Czynnosc, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Priorytet, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Priorytet, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Priorytet, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ProcentZakonczenia, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ProcentZakonczenia, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ProcentZakonczenia, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.DataRozpoczecia, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DataRozpoczecia, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DataRozpoczecia, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.DataZakonczenia, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DataZakonczenia, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DataZakonczenia, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="modal-footer">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-default" />
			<button type="button" id="btnCancel" class="btn btn-secondary">Zamknij</button>
		</div>
	</div>
</div>
}



<script type="text/javascript">$(document).ready(function () {
            $("#btnCancel").click(function (e) {
                e.preventDefault();
                $("#dialog-edit").dialog("close");
            });
        });</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
